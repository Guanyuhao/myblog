import comp from "/Users/guanhaha/Desktop/code/myblog/docs/.vuepress/.temp/pages/guide/frameworks/component-design.html.vue"
const data = JSON.parse("{\"path\":\"/guide/frameworks/component-design.html\",\"title\":\"组件设计最佳实践\",\"lang\":\"en-US\",\"frontmatter\":{\"description\":\"组件设计最佳实践 组件是现代前端框架的核心构建块，无论使用React、Vue还是Angular，良好的组件设计对于构建可维护、可扩展的应用至关重要。本文将分享组件设计的最佳实践，基于我在字节跳动等公司积累的实战经验。 在构建可复用的组件时，遵循一些最佳实践可以提高代码的可维护性和可读性。以下是一些组件设计的最佳实践。 1. 单一职责原则 每个组件应只负...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://guanyuhao.github.io/guide/frameworks/component-design.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"关哈哈\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"组件设计最佳实践\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"组件设计最佳实践 组件是现代前端框架的核心构建块，无论使用React、Vue还是Angular，良好的组件设计对于构建可维护、可扩展的应用至关重要。本文将分享组件设计的最佳实践，基于我在字节跳动等公司积累的实战经验。 在构建可复用的组件时，遵循一些最佳实践可以提高代码的可维护性和可读性。以下是一些组件设计的最佳实践。 1. 单一职责原则 每个组件应只负...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"en-US\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2025-03-11T08:38:33.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2025-03-11T08:38:33.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"组件设计最佳实践\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":\\\"2025-03-11T08:38:33.000Z\\\",\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1. 单一职责原则\",\"slug\":\"_1-单一职责原则\",\"link\":\"#_1-单一职责原则\",\"children\":[]},{\"level\":2,\"title\":\"2. 组件的可复用性\",\"slug\":\"_2-组件的可复用性\",\"link\":\"#_2-组件的可复用性\",\"children\":[]},{\"level\":2,\"title\":\"3. 组件的状态管理\",\"slug\":\"_3-组件的状态管理\",\"link\":\"#_3-组件的状态管理\",\"children\":[]},{\"level\":2,\"title\":\"4. 组件的样式\",\"slug\":\"_4-组件的样式\",\"link\":\"#_4-组件的样式\",\"children\":[]},{\"level\":2,\"title\":\"5. 组件的文档\",\"slug\":\"_5-组件的文档\",\"link\":\"#_5-组件的文档\",\"children\":[]},{\"level\":2,\"title\":\"可复用组件的设计原则\",\"slug\":\"可复用组件的设计原则\",\"link\":\"#可复用组件的设计原则\",\"children\":[{\"level\":3,\"title\":\"接口设计原则\",\"slug\":\"接口设计原则\",\"link\":\"#接口设计原则\",\"children\":[]},{\"level\":3,\"title\":\"可组合性设计\",\"slug\":\"可组合性设计\",\"link\":\"#可组合性设计\",\"children\":[]},{\"level\":3,\"title\":\"样式与主题设计\",\"slug\":\"样式与主题设计\",\"link\":\"#样式与主题设计\",\"children\":[]},{\"level\":3,\"title\":\"可访问性设计\",\"slug\":\"可访问性设计\",\"link\":\"#可访问性设计\",\"children\":[]},{\"level\":3,\"title\":\"文档与测试\",\"slug\":\"文档与测试\",\"link\":\"#文档与测试\",\"children\":[]},{\"level\":3,\"title\":\"跨框架复用设计\",\"slug\":\"跨框架复用设计\",\"link\":\"#跨框架复用设计\",\"children\":[]}]},{\"level\":2,\"title\":\"实战总结：字节跳动组件库设计经验\",\"slug\":\"实战总结-字节跳动组件库设计经验\",\"link\":\"#实战总结-字节跳动组件库设计经验\",\"children\":[]},{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]},{\"level\":2,\"title\":\"学习资源\",\"slug\":\"学习资源\",\"link\":\"#学习资源\",\"children\":[]}],\"git\":{\"updatedTime\":1741682313000,\"contributors\":[{\"name\":\"guanhaha\",\"username\":\"guanhaha\",\"email\":\"guanyuhao666@gmail.com\",\"commits\":1,\"url\":\"https://github.com/guanhaha\"}]},\"autoDesc\":true,\"filePathRelative\":\"guide/frameworks/component-design.md\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
