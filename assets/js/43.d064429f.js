(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{358:function(s,e,a){"use strict";a.r(e);var t=a(17),r=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"git",tabindex:"-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),e("p",[s._v("本文不会介绍 Git 的基本操作，会对一些高级操作进行说明。")]),s._v(" "),e("h2",{attrs:{id:"rebase-合并",tabindex:"-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase-合并"}},[s._v("#")]),s._v(" Rebase 合并")]),s._v(" "),e("p",[s._v("该命令可以让和 "),e("code",[s._v("merge")]),s._v(" 命令得到的结果基本是一致的。")]),s._v(" "),e("p",[s._v("通常使用 "),e("code",[s._v("merge")]),s._v(" 操作将分支上的代码合并到 "),e("code",[s._v("master")]),s._v(" 中，分支样子如下所示")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://yck-1254263422.cos.ap-shanghai.myqcloud.com/blog/2019-06-01-043128.png",alt:""}})]),s._v(" "),e("p",[s._v("使用 "),e("code",[s._v("rebase")]),s._v(" 后，会将 "),e("code",[s._v("develop")]),s._v(" 上的 "),e("code",[s._v("commit")]),s._v(" 按顺序移到 "),e("code",[s._v("master")]),s._v(" 的第三个 "),e("code",[s._v("commit")]),s._v(" 后面，分支样子如下所示")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://yck-1254263422.cos.ap-shanghai.myqcloud.com/blog/2019-06-01-043129.png",alt:""}})]),s._v(" "),e("p",[s._v("Rebase 对比 merge，优势在于合并后的结果很清晰，只有一条线，劣势在于如果一旦出现冲突，解决冲突很麻烦，可能要解决多个冲突，但是 merge 出现冲突只需要解决一次。")]),s._v(" "),e("p",[s._v("使用 rebase 应该在需要被 rebase 的分支上操作，并且该分支是本地分支。如果 "),e("code",[s._v("develop")]),s._v(" 分支需要 rebase 到 "),e("code",[s._v("master")]),s._v(" 上去，那么应该如下操作")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## branch develop")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 用于将 `master` 上的 HEAD 移动到最新的 commit")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"stash",tabindex:"-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stash"}},[s._v("#")]),s._v(" stash")]),s._v(" "),e("p",[e("code",[s._v("stash")]),s._v(" 用于临时保存工作目录的改动。开发中可能会遇到代码写一半需要切分支打包的问题，如果这时候你不想 "),e("code",[s._v("commit")]),s._v(" 的话，就可以使用该命令。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("使用该命令可以暂存你的工作目录，后面想恢复工作目录，只需要使用")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash pop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这样你之前临时保存的代码又回来了")]),s._v(" "),e("h2",{attrs:{id:"reflog",tabindex:"-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reflog"}},[s._v("#")]),s._v(" reflog")]),s._v(" "),e("p",[e("code",[s._v("reflog")]),s._v(" 可以看到 HEAD 的移动记录，假如之前误删了一个分支，可以通过 "),e("code",[s._v("git reflog")]),s._v(" 看到移动 HEAD 的哈希值")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://yck-1254263422.cos.ap-shanghai.myqcloud.com/blog/2019-06-01-43130.png",alt:""}})]),s._v(" "),e("p",[s._v("从图中可以看出，HEAD 的最后一次移动行为是 "),e("code",[s._v("merge")]),s._v(" 后，接下来分支 "),e("code",[s._v("new")]),s._v(" 就被删除了，那么我们可以通过以下命令找回 "),e("code",[s._v("new")]),s._v(" 分支")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout 37d9aca\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" new\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("PS："),e("code",[s._v("reflog")]),s._v(" 记录是时效的，只会保存一段时间内的记录。")]),s._v(" "),e("h2",{attrs:{id:"reset",tabindex:"-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[s._v("#")]),s._v(" Reset")]),s._v(" "),e("p",[s._v("如果你想删除刚写的 commit，就可以通过以下命令实现")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" HEAD^\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("但是 "),e("code",[s._v("reset")]),s._v(" 的本质并不是删除了 commit，而是重新设置了 HEAD 和它指向的 branch。")])])}),[],!1,null,null,null);e.default=r.exports}}]);