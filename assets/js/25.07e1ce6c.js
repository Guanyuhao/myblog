(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{419:function(t,e,n){"use strict";n.r(e);var a=n(42),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://yeasy.gitbooks.io/docker_practice/image/build.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker —— 从入门到实践"),n("OutboundLink")],1)])]),t._v(" "),n("h1",{attrs:{id:"docker-基本操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-基本操作"}},[t._v("#")]),t._v(" Docker 基本操作")]),t._v(" "),n("p",[t._v("开发常用：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("images")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("查看镜像列表")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("rmi")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("删除镜像")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("save")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("将指定镜像保存成 tar 归档文件")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("load")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("从存档或者 STDIN 加载镜像")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("build")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("从一个 DockerFile 构建镜像")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("commit")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("从容器创建一个镜像")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("create")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("创建一个容器")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("run")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("创建一个新的容器并运行一个命令")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("rename")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("重命名容器")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("start")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("启动容器")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("stop")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("停止容器")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("restart")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("重启容器")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("rm")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("删除容器")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("logs")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("获取一个容器的日志")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("exec")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("在正在运行的容器中运行命令")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("cp")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("从容器和主机文件系统之间拷贝文件")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("ps")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("查看容器列表")])])])]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# eg")]),t._v("\ndocker pull nginx\ndocker run -itd -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5210")]),t._v(":80 -v D:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("docker_web:/home/work --name llpweb nginx\ndocker "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it llpweb /bin/bash\n")])])]),n("p",[t._v("打开宿主机端口 5210")]),t._v(" "),n("h1",{attrs:{id:"docker-容器网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器网络"}},[t._v("#")]),t._v(" Docker 容器网络")]),t._v(" "),n("h2",{attrs:{id:"默认网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#默认网络"}},[t._v("#")]),t._v(" 默认网络")]),t._v(" "),n("blockquote",[n("p",[t._v("安装 Docker 时，它会自动创建 3 个网络。可以使用 docker network ls 命令列出这些网络")])]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("docker network "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n")])])]),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("NETWORK ID")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("NAME")]),t._v(" "),n("th",[t._v("DRIVER")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("7fca4eb8c647")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("bridge")]),t._v(" "),n("td",[t._v("bridge")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("9f904ee27bf5")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("none")]),t._v(" "),n("td",[t._v("null")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("cf03ee007fb4")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("host")]),t._v(" "),n("td",[t._v("host")])])])]),t._v(" "),n("ul",[n("li",[t._v("bridge 网络表示所有 Docker 安装中都存在的 docker0 网络。除非使用 "),n("code",[t._v("docker run --net=<NETWORK>")]),t._v("选项另行指定，否则 Docker 守护进程默认情况下会将容器连接到此网络。在主机上使用 ifconfig 命令，可以看到此网桥是主机的网络堆栈的一部分。")]),t._v(" "),n("li",[t._v("none 网络在一个特定于容器的网络堆栈上添加了一个容器。该容器缺少网络接口。")]),t._v(" "),n("li",[t._v("host 网络在主机网络堆栈上添加一个容器。您可以发现，容器中的网络配置与主机相同")])]),t._v(" "),n("h3",{attrs:{id:"操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[t._v("#")]),t._v(" 操作")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建网路")]),t._v("\n\ndocker network create -d bridge test-net\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接一个容器到一个网络")]),t._v("\n\ndocker network connetc test-net container1\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run -itd --network=test-net images1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用–link选项来指定一个首选别名来连接到另一个容")]),t._v("\n\ndocker network connect --link container1:c1 multi-host-network container2\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证这个容器是否已连接到网络")]),t._v("\n\ndocker network inspect test-net\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从网络删除容器")]),t._v("\ndocker network disconnect\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);